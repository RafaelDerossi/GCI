// <auto-generated />
using System;
using CondominioApp.Portaria.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CondominioApp.Portaria.Infra.Migrations
{
    [DbContext(typeof(PortariaContextDB))]
    [Migration("20210118171646_RemoveTerminado")]
    partial class RemoveTerminado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CondominioApp.Portaria.Domain.Visita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AndarUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrupoUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<string>("NomeCondominio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeEmpresaVisitante")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeVisitante")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NumeroUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeDocumentoVisitante")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeVisitante")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VisitanteId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("CondominioApp.Portaria.Domain.Visitante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AndarUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrupoUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeCondominio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NumeroUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("QrCode")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoDeDocumento")
                        .HasColumnType("int");

                    b.Property<int>("TipoDeVisitante")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("VisitantePermanente")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Visitantes");
                });

            modelBuilder.Entity("CondominioApp.Portaria.Domain.Visita", b =>
                {
                    b.HasOne("CondominioApp.Portaria.Domain.Visitante", null)
                        .WithMany("Visitas")
                        .HasForeignKey("VisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Cpf", "CpfVisitante", b1 =>
                        {
                            b1.Property<Guid>("VisitaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .HasColumnName("Cpf")
                                .HasColumnType("varchar(14)")
                                .HasMaxLength(14);

                            b1.HasKey("VisitaId");

                            b1.ToTable("Visitas");

                            b1.WithOwner()
                                .HasForeignKey("VisitaId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Email", "EmailVisitante", b1 =>
                        {
                            b1.Property<Guid>("VisitaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(255);

                            b1.HasKey("VisitaId");

                            b1.ToTable("Visitas");

                            b1.WithOwner()
                                .HasForeignKey("VisitaId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Foto", "FotoVisitante", b1 =>
                        {
                            b1.Property<Guid>("VisitaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NomeDoArquivo")
                                .HasColumnName("NomeDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeOriginal")
                                .HasColumnName("NomeOriginal")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.HasKey("VisitaId");

                            b1.ToTable("Visitas");

                            b1.WithOwner()
                                .HasForeignKey("VisitaId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Rg", "RgVisitante", b1 =>
                        {
                            b1.Property<Guid>("VisitaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .HasColumnName("Rg")
                                .HasColumnType("varchar(10)")
                                .HasMaxLength(10);

                            b1.HasKey("VisitaId");

                            b1.ToTable("Visitas");

                            b1.WithOwner()
                                .HasForeignKey("VisitaId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Veiculo", "Veiculo", b1 =>
                        {
                            b1.Property<Guid>("VisitaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cor")
                                .HasColumnName("Cor")
                                .HasColumnType("varchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("Modelo")
                                .HasColumnName("Modelo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("Placa")
                                .HasColumnName("Placa")
                                .HasColumnType("varchar(7)")
                                .HasMaxLength(7);

                            b1.HasKey("VisitaId");

                            b1.ToTable("Visitas");

                            b1.WithOwner()
                                .HasForeignKey("VisitaId");
                        });
                });

            modelBuilder.Entity("CondominioApp.Portaria.Domain.Visitante", b =>
                {
                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("VisitanteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .HasColumnName("Cpf")
                                .HasColumnType("varchar(14)")
                                .HasMaxLength(14);

                            b1.HasKey("VisitanteId");

                            b1.ToTable("Visitantes");

                            b1.WithOwner()
                                .HasForeignKey("VisitanteId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("VisitanteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(255);

                            b1.HasKey("VisitanteId");

                            b1.ToTable("Visitantes");

                            b1.WithOwner()
                                .HasForeignKey("VisitanteId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Foto", "Foto", b1 =>
                        {
                            b1.Property<Guid>("VisitanteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NomeDoArquivo")
                                .HasColumnName("NomeDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeOriginal")
                                .HasColumnName("NomeOriginal")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.HasKey("VisitanteId");

                            b1.ToTable("Visitantes");

                            b1.WithOwner()
                                .HasForeignKey("VisitanteId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Rg", "Rg", b1 =>
                        {
                            b1.Property<Guid>("VisitanteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .HasColumnName("Rg")
                                .HasColumnType("varchar(10)")
                                .HasMaxLength(10);

                            b1.HasKey("VisitanteId");

                            b1.ToTable("Visitantes");

                            b1.WithOwner()
                                .HasForeignKey("VisitanteId");
                        });

                    b.OwnsOne("CondominioApp.Portaria.ValueObjects.Veiculo", "Veiculo", b1 =>
                        {
                            b1.Property<Guid>("VisitanteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cor")
                                .HasColumnName("Cor")
                                .HasColumnType("varchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("Modelo")
                                .HasColumnName("Modelo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("Placa")
                                .HasColumnName("Placa")
                                .HasColumnType("varchar(7)")
                                .HasMaxLength(7);

                            b1.HasKey("VisitanteId");

                            b1.ToTable("Visitantes");

                            b1.WithOwner()
                                .HasForeignKey("VisitanteId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
