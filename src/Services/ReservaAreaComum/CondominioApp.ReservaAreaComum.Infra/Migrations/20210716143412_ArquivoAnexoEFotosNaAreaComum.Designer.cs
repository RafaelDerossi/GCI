// <auto-generated />
using System;
using CondominioApp.ReservaAreaComum.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CondominioApp.ReservaAreaComum.Infra.Migrations
{
    [DbContext(typeof(ReservaAreaComumContextDB))]
    [Migration("20210716143412_ArquivoAnexoEFotosNaAreaComum")]
    partial class ArquivoAnexoEFotosNaAreaComum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.AreaComum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AntecedenciaMaximaEmDias")
                        .HasColumnType("int");

                    b.Property<int>("AntecedenciaMaximaEmMeses")
                        .HasColumnType("int");

                    b.Property<int>("AntecedenciaMinimaEmDias")
                        .HasColumnType("int");

                    b.Property<int>("AntecedenciaMinimaParaCancelamentoEmDias")
                        .HasColumnType("int");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFimBloqueio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioBloqueio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DiasPermitidos")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeCondominio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("NumeroLimiteDeReservaPorUnidade")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLimiteDeReservaSobreposta")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLimiteDeReservaSobrepostaPorUnidade")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteReservaSobreposta")
                        .HasColumnType("bit");

                    b.Property<bool>("RequerAprovacaoDeReserva")
                        .HasColumnType("bit");

                    b.Property<bool>("TemHorariosEspecificos")
                        .HasColumnType("bit");

                    b.Property<string>("TempoDeDuracaoDeReserva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempoDeIntervaloEntreReservas")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TempoDeIntervaloEntreReservasPorUnidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermoDeUso")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("AreasComuns");
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.FotoDaAreaComum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AreaComumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AreaComumId");

                    b.ToTable("FotoDaAreaComum");
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.Periodo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AreaComumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraFim")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("AreaComumId");

                    b.ToTable("Periodos");
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AndarUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("AreaComumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CriadaPelaAdministracao")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeRealizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoGrupoUnidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraFim")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Justificativa")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<Guid>("MoradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMorador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroUnidade")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Origem")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("ReservadoPelaAdministracao")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AreaComumId");

                    b.HasIndex("Protocolo")
                        .IsUnique();

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.AreaComum", b =>
                {
                    b.OwnsOne("CondominioApp.ReservaAreaComum.Domain.ValueObjects.NomeArquivo", "NomeArquivoAnexo", b1 =>
                        {
                            b1.Property<Guid>("AreaComumId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ExtensaoDoArquivo")
                                .IsRequired()
                                .HasColumnName("ExtensaoDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeDoArquivo")
                                .IsRequired()
                                .HasColumnName("NomeDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeOriginal")
                                .IsRequired()
                                .HasColumnName("NomeOriginal")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.HasKey("AreaComumId");

                            b1.ToTable("AreasComuns");

                            b1.WithOwner()
                                .HasForeignKey("AreaComumId");
                        });
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.FotoDaAreaComum", b =>
                {
                    b.HasOne("CondominioApp.ReservaAreaComum.Domain.AreaComum", null)
                        .WithMany("Fotos")
                        .HasForeignKey("AreaComumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.Periodo", b =>
                {
                    b.HasOne("CondominioApp.ReservaAreaComum.Domain.AreaComum", null)
                        .WithMany("Periodos")
                        .HasForeignKey("AreaComumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CondominioApp.ReservaAreaComum.Domain.Reserva", b =>
                {
                    b.HasOne("CondominioApp.ReservaAreaComum.Domain.AreaComum", null)
                        .WithMany("Reservas")
                        .HasForeignKey("AreaComumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
