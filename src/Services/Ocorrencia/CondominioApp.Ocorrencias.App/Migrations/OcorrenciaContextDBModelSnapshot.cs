// <auto-generated />
using System;
using CondominioApp.Ocorrencias.App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CondominioApp.Ocorrencias.App.Migrations
{
    [DbContext(typeof(OcorrenciaContextDB))]
    partial class OcorrenciaContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CondominioApp.Ocorrencias.App.Models.Ocorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataResolucao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<Guid>("MoradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMorador")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Panico")
                        .HasColumnType("bit");

                    b.Property<bool>("Publica")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("CondominioApp.Ocorrencias.App.Models.RespostaOcorrencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("Lixeira")
                        .HasColumnType("bit");

                    b.Property<string>("NomeDoAutor")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("OcorrenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoAutor")
                        .HasColumnType("int");

                    b.Property<bool>("Visto")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OcorrenciaId");

                    b.ToTable("RespostasOcorrencias");
                });

            modelBuilder.Entity("CondominioApp.Ocorrencias.App.Models.Ocorrencia", b =>
                {
                    b.OwnsOne("CondominioApp.Ocorrencias.App.ValueObjects.Foto", "Foto", b1 =>
                        {
                            b1.Property<Guid>("OcorrenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NomeDoArquivo")
                                .IsRequired()
                                .HasColumnName("NomeDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeOriginal")
                                .IsRequired()
                                .HasColumnName("NomeOriginal")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.HasKey("OcorrenciaId");

                            b1.ToTable("Ocorrencias");

                            b1.WithOwner()
                                .HasForeignKey("OcorrenciaId");
                        });
                });

            modelBuilder.Entity("CondominioApp.Ocorrencias.App.Models.RespostaOcorrencia", b =>
                {
                    b.HasOne("CondominioApp.Ocorrencias.App.Models.Ocorrencia", null)
                        .WithMany("Respostas")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CondominioApp.Ocorrencias.App.ValueObjects.Foto", "Foto", b1 =>
                        {
                            b1.Property<Guid>("RespostaOcorrenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NomeDoArquivo")
                                .IsRequired()
                                .HasColumnName("NomeDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeOriginal")
                                .IsRequired()
                                .HasColumnName("NomeOriginal")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.HasKey("RespostaOcorrenciaId");

                            b1.ToTable("RespostasOcorrencias");

                            b1.WithOwner()
                                .HasForeignKey("RespostaOcorrenciaId");
                        });

                    b.OwnsOne("CondominioApp.Ocorrencias.App.ValueObjects.NomeArquivo", "ArquivoAxexo", b1 =>
                        {
                            b1.Property<Guid>("RespostaOcorrenciaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ExtensaoDoArquivo")
                                .IsRequired()
                                .HasColumnName("ExtensaoDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeDoArquivo")
                                .IsRequired()
                                .HasColumnName("NomeDoArquivo")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.Property<string>("NomeOriginal")
                                .IsRequired()
                                .HasColumnName("NomeOriginal")
                                .HasColumnType("varchar(200)")
                                .HasMaxLength(200);

                            b1.HasKey("RespostaOcorrenciaId");

                            b1.ToTable("RespostasOcorrencias");

                            b1.WithOwner()
                                .HasForeignKey("RespostaOcorrenciaId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
